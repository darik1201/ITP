import java.util.Scanner;

enum Drinks {
    COKE("Coke Cola", 5),
    SPRITE("Sprite", 4),
    FANTA("Fanta", 6);

    private final String name;
    private final int price;

    Drinks(String name, int price) {
        this.name = name;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public int getPrice() {
        return price;
    }

    @Override
    public String toString() {
        return name + " ($" + price + ")";
    }
}

enum Money {
    ONE(1),
    FIVE(5),
    TEN(10);

    private final int denomination;

    Money(int denomination) {
        this.denomination = denomination;
    }

    public int getDenomination() {
        return denomination;
    }
}

public class VendingMachine {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Welcome to the Vending Machine!");
        System.out.println("Here is the menu:");

        // Show menu
        for (Drinks drink : Drinks.values()) {
            System.out.println(drink.ordinal() + 1 + ". " + drink);
        }

        System.out.println("Please select a drink by entering its number:");
        int drinkChoice = scanner.nextInt();

        if (drinkChoice < 1 || drinkChoice > Drinks.values().length) {
            System.out.println("Invalid choice. Exiting.");
            return;
        }

        Drinks selectedDrink = Drinks.values()[drinkChoice - 1];
        System.out.println("You selected: " + selectedDrink.getName() + " which costs $" + selectedDrink.getPrice());

        System.out.println("Insert money (available denominations: 1, 5, 10):");
        int totalInserted = 0;

        while (true) {
            int inserted = scanner.nextInt();
            boolean validDenomination = false;

            for (Money money : Money.values()) {
                if (money.getDenomination() == inserted) {
                    validDenomination = true;
                    totalInserted += inserted;
                    break;
                }
            }

            if (!validDenomination) {
                System.out.println("Invalid denomination. Try again.");
                continue;
            }

            if (totalInserted >= selectedDrink.getPrice()) {
                break;
            }

            System.out.println("Total inserted: $" + totalInserted + ". Remaining: $" + (selectedDrink.getPrice() - totalInserted));
        }

        System.out.println("Total money inserted: $" + totalInserted);

        int change = totalInserted - selectedDrink.getPrice();
        System.out.println("Dispensing your drink: " + selectedDrink.getName());

        if (change > 0) {
            System.out.println("Calculating your change...");
            returnChange(change);
        } else {
            System.out.println("No change to return. Thank you!");
        }
    }

    private static void returnChange(int change) {
        System.out.println("Your change is: $" + change);
        System.out.println("Returning change in available denominations:");

        for (Money money : Money.values()) {
            while (change >= money.getDenomination()) {
                System.out.println("$" + money.getDenomination());
                change -= money.getDenomination();
            }
        }

        if (change > 0) {
            System.out.println("Unable to return exact change. Remaining: $" + change + ". Thank you!");
        }
    }
}
