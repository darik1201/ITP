import java.io.*;
import java.util.Scanner;

public class FileDivisionWithSuppressedExceptions {
    public static void main(String[] args) {
        String inputFilePath = "input.txt"; // Replace with the actual file path
        Exception mainException = null;

        try (Scanner scanner = new Scanner(new File(inputFilePath))) {
            // Ensure the file contains at least two numbers
            if (!scanner.hasNextInt()) {
                throw new NumberFormatException("First value is not a valid integer.");
            }
            int num1 = scanner.nextInt();

            if (!scanner.hasNextInt()) {
                throw new NumberFormatException("Second value is not a valid integer.");
            }
            int num2 = scanner.nextInt();

            // Perform the division
            int result = divideNumbers(num1, num2);
            System.out.println("Result of division: " + result);

        } catch (FileNotFoundException e) {
            mainException = e;
            System.err.println("Error: Input file not found.");
        } catch (NumberFormatException e) {
            mainException = e;
            System.err.println("Error: Invalid input. " + e.getMessage());
        } catch (ArithmeticException e) {
            mainException = e;
            System.err.println("Error: Arithmetic exception. Division by zero is not allowed.");
        } catch (Exception e) {
            mainException = e;
            System.err.println("Error: An unexpected error occurred. " + e.getMessage());
        } finally {
            // Throw the suppressed exception if it exists
            if (mainException != null) {
                System.err.println("Rethrowing exception: " + mainException);
                mainException.printStackTrace();
            }
        }
    }

    // Method to handle division
    private static int divideNumbers(int num1, int num2) {
        if (num2 == 0) {
            throw new ArithmeticException("Division by zero.");
        }
        return num1 / num2;
    }
}
